services:
  editor_service_api:
    build: ./api
    environment:
      PORT: ${EDITOR_SERVICE_PORT}
      SERVICE_ROUTE: ${SERVICE_ROUTE}
      USER_SERVICE_API: 'http://user_service_api:9000/user-service'
      ROOM_SERVICE_API: 'http://room_service_api:9003/room-service'
      QUESTION_SERVICE_API: 'http://question_service_api:9001/question-service'
      REDIS_PORT: ${REDIS_PORT}
      REDIS_HOST: 'editor_service_redis'
    ports:
      - '${EDITOR_SERVICE_PORT}:9004'
    networks:
      - peerprep
    depends_on:
      - editor_service_redis
    restart: unless-stopped

  editor_service_docs:
    build: ./docs
    environment:
      PORT: ${EDITOR_DOCS_PORT}
      DOCS_SERVICE_ROUTE: ${DOCS_SERVICE_ROUTE}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_HOST: 'editor_service_redis'
      QUESTION_SERVICE_API: 'http://question_service_api:9001/question-service'
      MQ_USER: ${MQ_USER}
      MQ_PASSWORD: ${MQ_PASSWORD}
      MQ_HOST: 'room_service_mq'
      MQ_EXCHANGE_NAME: ${MQ_EXCHANGE_NAME}
      MQ_QUEUE_NAME: ${MQ_QUEUE_NAME}
      NODE_ENV: ${NODE_ENV}
    networks:
      - peerprep
    ports:
      - '${EDITOR_DOCS_PORT}:${EDITOR_DOCS_PORT}'
    depends_on:
      - editor_service_redis
    restart: unless-stopped

  editor_service_redis:
    image: redis:latest
    ports:
      - '${REDIS_PORT}:${REDIS_DOCKER_PORT}'
    networks:
      - peerprep
    restart: unless-stopped

networks:
  peerprep:
      external: true
      name: peerprep
